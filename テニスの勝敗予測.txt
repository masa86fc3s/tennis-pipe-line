テニスの勝敗予測 【現在 0.8326】

今回はパイプライン作成がメインなので、前処理と特徴量エンジニアリンが終了次第、パイプライン作成に入ります。

モデルの線形か非線形かを調べるためには、
1．残差プロット
2.　SHAP Dependence Plot


【方針】
・まず説明変数に取ったセット数というほぼ目的変数なるのものが入っているため、これを削除する。
中身としては、取った総セット数と、1~5セットまでの、総取得ゲーム数など、ほぼ予測を可能にする、（むしろ終了した結果から勝敗を予測するのはいかがなものか）
ということで、2~5セットまでの取得ゲーム数に関しても削除するのが望ましいと思う。
・基本的にポイントに関するものは全て削除
・ブレーク数に関しても過去の結果からになるので基本的はアウトとする
all_data = all_data.drop(["Year","ST2.1","ST3.1","ST4.1","ST5.1","ST2.2","ST3.2","ST4.2","ST5.2","FNL.1","FNL.2","TPW.1","TPW.2","BPW.1", "BPW.2", "BPC.1", "BPC.2"],axis=1)

【探索的データ分析での気づき】
（セット数）
モデルで分析するときには削除はするが、その前に調べておくと、当然相関は強く出たのだが、
面白い点が、奇数番目のセットを取った方が勝率が上がっていることが分かった。
順番は当然ながら5,3,1ゲーム目を取得した選手の順に相関は強かった。
（サーブ）
・1srサーブの割合が約65%を超えると勝率が上がる
・同じく1stサーブでの得点率が60%を超えると勝率が上がる
→これならサービス率20%ずつぐらいで分けた変数を作っても面白いかも？
（ブレイク数）
・ブレイク数は5回以上で勝率が跳ね上がるけど、これも過去のデータかな
→削除した方が良いと思う
（エラー数）
・20回以下だと勝率が上がるっぽい

【相関係数】：目的変数に対しての関連性
1セットの取得、winnerラリー数、エラー数、サービスエースなどが上位に来ている
【PCA】説明変数間の構造把握
第一主成分に寄与しているのが、
1サーブ、2サーブ、winnerラリー、ネットポイントなどが上位に来ている
【shap】
shapだと
st1.2,fsw.2,st1.1,fsw.1,ufe.2,wnr.1,ssw.2,ufe.1などが
[一旦の結論としては、サーブがとても重要で、かつラリーで打ち勝つ能力と、ネットプレーなど積極的にプレーしている選手が勝率が高い]
【教師なし】
・k-meansはシンプルで早く、線形に強い
・u-mapは非線形でもつよい
→結果、u-mapをしてからk-meansを使った方が、見やすくなるかも
【クラスタリング】

- 0 : (女)勝率低い、積極的にポイントを取っていっていない、1st,ace,wnrの数値も低い
- 1 : (女)勝率高い、積極的なプレースタイルで、サービスエース、ミスの数も少ない
- 2 : (男)勝率半々、3グループより少し勝率が高い、特にwnrエースがとても多い
- 3 : (男)勝率半々、若干勝率は低い、ミスの数はほぼ一緒なので、相手が積極的なプレーで押し負けた感じ
女性はミス泣く点を取っていく、男性はエースをバンバン狙いに行く


【精度を上げた変数】
'FSW.1', 'WNR.1', 'NPW.1', 'UFE.1', 'ST1.1','FSW.2', 'NPW.2', 'UFE.2','WNR.2','SSW.2'
【精度を下げた変数】
'ST1.2','Tournament','sex','Round','FSP.1','SSP.1','ACE.1','DBF.1','DBF.2','ACE.2','ACE.2'

【欠損値補完】
・上に関してはグラフが左に右に裾の形状なので、外れ値に弱いと判断し、中央値で補完
cols_to_impute = ['WNR.1', 'UFE.1', 'WNR.2', 'UFE.2', 'NPW.1', 'NPW.2', 'NPA.1', 'NPA.2']
・数%程しかなかったため0で補完しました。
cols_to_zero = ['ACE.1','DBF.1','ACE.2','DBF.2']
約0.004精度が上がった


・pca分析して、多重共線性がないかをチェックし、余りにも強かったら削除する
また線形か、非線形かを調べることで、今後の方針も変わってくる


